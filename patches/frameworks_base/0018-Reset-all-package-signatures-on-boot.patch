From a326607c2fb721a6c38bb5ffaca854ffbba5e6e2 Mon Sep 17 00:00:00 2001
From: Sam Mortimer <sam@mortimer.me.uk>
Date: Tue, 10 Jan 2017 22:21:45 -0800
Subject: [PATCH 18/18] Reset all package signatures on boot

Can be used to make a special build that resets all
package signatures without wiping any data.

Change-Id: Iff65f2ed3c9d0f80be7221ff90803eda4732cac0
---
 .../com/android/server/pm/PackageManagerService.java     | 16 +++++++++++++++-
 1 file changed, 15 insertions(+), 1 deletion(-)

diff --git a/services/core/java/com/android/server/pm/PackageManagerService.java b/services/core/java/com/android/server/pm/PackageManagerService.java
index 2dbed48..8d48229 100644
--- a/services/core/java/com/android/server/pm/PackageManagerService.java
+++ b/services/core/java/com/android/server/pm/PackageManagerService.java
@@ -423,6 +423,8 @@ public class PackageManagerService extends IPackageManager.Stub
     private static final boolean ENABLE_FREE_CACHE_V2 =
             SystemProperties.getBoolean("fw.free_cache_v2", true);
 
+    private static final boolean RESET_ALL_PACKAGE_SIGNATURES_ON_BOOT = true;
+
     private static final int RADIO_UID = Process.PHONE_UID;
     private static final int LOG_UID = Process.LOG_UID;
     private static final int NFC_UID = Process.NFC_UID;
@@ -754,6 +756,8 @@ public class PackageManagerService extends IPackageManager.Stub
 
     PackageManagerInternal.ExternalSourcesPolicy mExternalSourcesPolicy;
 
+    private boolean mResetSignatures;
+
     // System configuration read by SystemConfig.
     final int[] mGlobalGids;
     final SparseArray<ArraySet<String>> mSystemPermissions;
@@ -2640,6 +2644,8 @@ public class PackageManagerService extends IPackageManager.Stub
                 scanFlags = scanFlags | SCAN_FIRST_BOOT_OR_UPGRADE;
             }
 
+            mResetSignatures = RESET_ALL_PACKAGE_SIGNATURES_ON_BOOT;
+
             // Collect vendor overlay packages. (Do this before scanning any apps.)
             // For security and version matching reason, only consider
             // overlay packages if they reside in the right directory.
@@ -2893,6 +2899,8 @@ public class PackageManagerService extends IPackageManager.Stub
             }
             mExpectingBetter.clear();
 
+            mResetSignatures = false;
+
             // Resolve the storage manager.
             mStorageManagerPackage = getStorageManagerPackageName();
 
@@ -11108,7 +11116,13 @@ public class PackageManagerService extends IPackageManager.Stub
                 }
             }
 
-            if (shouldCheckUpgradeKeySetLP(signatureCheckPs, scanFlags)) {
+            if (mResetSignatures) {
+                Slog.d(TAG, "resetting signatures on package " + pkg.packageName);
+                pkgSetting.signatures.mSignatures = pkg.mSignatures;
+                if (pkgSetting.sharedUser != null) {
+                    pkgSetting.sharedUser.signatures.mSignatures = pkg.mSignatures;
+                }
+            } else if (shouldCheckUpgradeKeySetLP(signatureCheckPs, scanFlags)) {
                 if (checkUpgradeKeySetLP(signatureCheckPs, pkg)) {
                     // We just determined the app is signed correctly, so bring
                     // over the latest parsed certs.
-- 
2.7.4

